@page "/customer/delete/{id:int}"

@using Application.Customers.Queries.GetCustomerById

@inject NavigationManager NavigationManager
@inject HttpClient _http

<h2>Delete Customer</h2>
<br />
<div class="form-group">
    <h4>Do you want to delete this customer?</h4>
    <table class="table">
        <tbody>
            <tr>
                <td>Firstname</td>
                <td>@customer.Firstname</td>
            </tr>
            <tr>
                <td>Lastname</td>
                <td>@customer.Lastname</td>
            </tr>
            <tr>
                <td>Email</td>
                <td>@customer.Email</td>
            </tr>
            <tr>
                <td>PhoneNumber</td>
                <td>@customer.PhoneNumber</td>
            </tr>
        </tbody>
    </table>
</div>
<div class="form-group">
    <input type="submit" value="Delete" @onclick="(async () => await RemoveUser(customer.Id))" class="btn btn-danger" />
    <input type="submit" value="Cancel" @onclick="(() => Cancel())" class="btn btn-warning" />
</div>
@code {
    [Parameter]
    public int id { get; set; }
    CustomerDto customer = new ();
    protected override async Task OnInitializedAsync()
    {
        customer = await _http.GetFromJsonAsync<CustomerDto>("/api/Customers/" + Convert.ToInt64(id));
    }
    protected async Task RemoveUser(long id)
    {
        await _http.DeleteAsync("api/Customers/" + id);
        NavigationManager.NavigateTo("/Customer");
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("/Customer");
    }
}